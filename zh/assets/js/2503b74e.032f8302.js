"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[65336],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||o;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1017:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return s}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),l={title:"\u6279\u5904\u7406\u5668"},i=void 0,c={unversionedId:"batch-processor",id:"batch-processor",isDocsHomePage:!1,title:"\u6279\u5904\u7406\u5668",description:"\x3c!--",source:"@site/i18n/zh/docusaurus-plugin-content-docs-docs-apisix/current/batch-processor.md",sourceDirName:".",slug:"/batch-processor",permalink:"/zh/docs/apisix/next/batch-processor",editUrl:"https://github.com/apache/apisix/edit/master/docs/zh/latest/batch-processor.md",tags:[],version:"current",frontMatter:{title:"\u6279\u5904\u7406\u5668"},sidebar:"docs",previous:{title:"\u8bc1\u4e66",permalink:"/zh/docs/apisix/next/certificate"},next:{title:"\u538b\u529b\u6d4b\u8bd5",permalink:"/zh/docs/apisix/next/benchmark"}},p=[{value:"\u914d\u7f6e",id:"\u914d\u7f6e",children:[]}],u={toc:p};function s(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u6279\u5904\u7406\u5668\u53ef\u7528\u4e8e\u805a\u5408\u6761\u76ee\uff08\u65e5\u5fd7/\u4efb\u4f55\u6570\u636e\uff09\u5e76\u8fdb\u884c\u6279\u5904\u7406\u3002\n\u5f53 ",(0,o.kt)("inlineCode",{parentName:"p"},"batch_max_size")," \u8bbe\u7f6e\u4e3a\u96f6\u65f6\uff0c\u5904\u7406\u5668\u5c06\u7acb\u5373\u6267\u884c\u6bcf\u4e2a\u6761\u76ee\u3002\u5c06\u6279\u5904\u7406\u7684\u6700\u5927\u503c\u8bbe\u7f6e\u4e3a\u5927\u4e8e 1 \u5c06\u5f00\u59cb\u805a\u5408\u6761\u76ee\uff0c\u76f4\u5230\u8fbe\u5230\u6700\u5927\u503c\u6216\u8d85\u65f6\u3002"),(0,o.kt)("h2",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,o.kt)("p",null,"\u521b\u5efa\u6279\u5904\u7406\u5668\u7684\u552f\u4e00\u5fc5\u9700\u53c2\u6570\u662f\u51fd\u6570\u3002\u5f53\u6279\u5904\u7406\u8fbe\u5230\u6700\u5927\u503c\u6216\u7f13\u51b2\u533a\u6301\u7eed\u65f6\u95f4\u8d85\u8fc7\u65f6\uff0c\u51fd\u6570\u5c06\u88ab\u6267\u884c\u3002"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,o.kt)("th",{parentName:"tr",align:null},"\u5fc5\u9009\u9879"),(0,o.kt)("th",{parentName:"tr",align:null},"\u63cf\u8ff0"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"name"),(0,o.kt)("td",{parentName:"tr",align:null},"\u53ef\u9009\u7684"),(0,o.kt)("td",{parentName:"tr",align:null},"\u6807\u8bc6\u6279\u5904\u7406\u8005\u7684\u552f\u4e00\u6807\u8bc6\u7b26")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"batch_max_size"),(0,o.kt)("td",{parentName:"tr",align:null},"\u53ef\u9009\u7684"),(0,o.kt)("td",{parentName:"tr",align:null},"\u6bcf\u6279\u7684\u6700\u5927\u5927\u5c0f\uff0c\u9ed8\u8ba4\u4e3a ",(0,o.kt)("inlineCode",{parentName:"td"},"1000"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"inactive_timeout"),(0,o.kt)("td",{parentName:"tr",align:null},"\u53ef\u9009\u7684"),(0,o.kt)("td",{parentName:"tr",align:null},"\u5982\u679c\u4e0d\u6d3b\u52a8\uff0c\u5c06\u5237\u65b0\u7f13\u51b2\u533a\u7684\u6700\u5927\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u9ed8\u8ba4\u503c\u4e3a ",(0,o.kt)("inlineCode",{parentName:"td"},"5"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"buffer_duration"),(0,o.kt)("td",{parentName:"tr",align:null},"\u53ef\u9009\u7684"),(0,o.kt)("td",{parentName:"tr",align:null},"\u5fc5\u987b\u5148\u5904\u7406\u6279\u6b21\u4e2d\u6700\u65e7\u6761\u76ee\u7684\u6700\u5927\u671f\u9650\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u9ed8\u8ba4\u662f ",(0,o.kt)("inlineCode",{parentName:"td"},"5"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"max_retry_count"),(0,o.kt)("td",{parentName:"tr",align:null},"\u53ef\u9009\u7684"),(0,o.kt)("td",{parentName:"tr",align:null},"\u4ece\u5904\u7406\u7ba1\u9053\u4e2d\u79fb\u9664\u4e4b\u524d\u7684\u6700\u5927\u91cd\u8bd5\u6b21\u6570\uff1b\u9ed8\u8ba4\u4e3a ",(0,o.kt)("inlineCode",{parentName:"td"},"0"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"retry_delay"),(0,o.kt)("td",{parentName:"tr",align:null},"\u53ef\u9009\u7684"),(0,o.kt)("td",{parentName:"tr",align:null},"\u5982\u679c\u6267\u884c\u5931\u8d25\uff0c\u5e94\u8be5\u5ef6\u8fdf\u8fdb\u7a0b\u6267\u884c\u7684\u79d2\u6570\uff1b\u9ed8\u8ba4\u4e3a ",(0,o.kt)("inlineCode",{parentName:"td"},"1"))))),(0,o.kt)("p",null,"\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u5728\u4f60\u7684\u63d2\u4ef6\u4e2d\u4f7f\u7528\u6279\u5904\u7406\u5668\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local bp_manager_mod = require("apisix.utils.batch-processor-manager")\n...\n\nlocal plugin_name = "xxx-logger"\nlocal batch_processor_manager = bp_manager_mod.new(plugin_name)\nlocal schema = {...}\nlocal _M = {\n    ...\n    name = plugin_name,\n    schema = batch_processor_manager:wrap_schema(schema),\n}\n\n...\n\n\nfunction _M.log(conf, ctx)\n    local entry = {...} -- data to log\n\n    if batch_processor_manager:add_entry(conf, entry) then\n        return\n    end\n    -- create a new processor if not found\n\n    -- entries is an array table of entry, which can be processed in batch\n    local func = function(entries)\n        -- serialize to json array core.json.encode(entries)\n        -- process/send data\n        return true\n        -- return false, err_msg if failed\n    end\n    batch_processor_manager:add_entry_to_new_processor(conf, entry, ctx, func)\nend\n')),(0,o.kt)("p",null,"\u6279\u5904\u7406\u5668\u7684\u914d\u7f6e\u5c06\u901a\u8fc7\u8be5\u63d2\u4ef6\u7684\u914d\u7f6e\u8bbe\u7f6e\u3002\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n      "plugins": {\n            "http-logger": {\n                "uri": "http://mockbin.org/bin/:ID",\n                "batch_max_size": 10,\n                "max_retry_count": 1\n            }\n       },\n      "upstream": {\n           "type": "roundrobin",\n           "nodes": {\n               "127.0.0.1:1980": 1\n           }\n      },\n      "uri": "/hello"\n}\'\n')),(0,o.kt)("p",null,"\u5982\u679c\u4f60\u7684\u63d2\u4ef6\u53ea\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u7684\u6279\u5904\u7406\u5668\uff0c\n\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local entry = {...} -- data to log\nif log_buffer then\n    log_buffer:push(entry)\n    return\nend\n\nlocal config_bat = {\n    name = config.name,\n    retry_delay = config.retry_delay,\n    ...\n}\n\nlocal err\n-- entries is an array table of entry, which can be processed in batch\nlocal func = function(entries)\n    ...\n    return true\n    -- return false, err_msg if failed\nend\nlog_buffer, err = batch_processor:new(func, config_bat)\n\nif not log_buffer then\n    core.log.warn("error when creating the batch processor: ", err)\n    return\nend\n\nlog_buffer:push(entry)\n')),(0,o.kt)("p",null,"\u6ce8\u610f\uff1a\u8bf7\u786e\u4fdd\u6279\u5904\u7406\u7684\u6700\u5927\u503c\uff08\u6761\u76ee\u6570\uff09\u5728\u51fd\u6570\u6267\u884c\u7684\u8303\u56f4\u5185\u3002\n\u5237\u65b0\u6279\u5904\u7406\u7684\u8ba1\u65f6\u5668\u57fa\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"inactive_timeout")," \u914d\u7f6e\u8fd0\u884c\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u83b7\u5f97\u6700\u4f73\u4f7f\u7528\u6548\u679c\uff0c\n\u4fdd\u6301 ",(0,o.kt)("inlineCode",{parentName:"p"},"inactive_timeout")," \u5c0f\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"buffer_duration"),"\u3002"))}s.isMDXComponent=!0}}]);