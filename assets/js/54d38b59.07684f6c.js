"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[63499],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=u(n),d=r,g=h["".concat(l,".").concat(d)]||h[d]||p[d]||o;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},98076:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return l},assets:function(){return u},toc:function(){return c},default:function(){return h}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i={title:"Apache APISIX integrates with Open Policy Agent to enrich its ecosystem",authors:[{name:"Zeping Bai",title:"Author",url:"https://github.com/bzp2010",image_url:"https://avatars.githubusercontent.com/u/8078418?v=4"},{name:"Yilin Zeng",title:"Technical Writer",url:"https://github.com/yzeng25",image_url:"https://avatars.githubusercontent.com/u/36651058?v=4"}],keywords:["Apache APISIX","Open Policy Agent","OPA","API Gateway"],description:"This article introduces the opa plug-in as an example of HTTP API and details how to integrate Apache APISIX with OPA to decouple the authentication authorization of back-end services.",tags:["Technology"]},s=void 0,l={permalink:"/blog/2021/12/24/open-policy-agent",source:"@site/blog/2021/12/24/open-policy-agent.md",title:"Apache APISIX integrates with Open Policy Agent to enrich its ecosystem",description:"This article introduces the opa plug-in as an example of HTTP API and details how to integrate Apache APISIX with OPA to decouple the authentication authorization of back-end services.",date:"2021-12-24T00:00:00.000Z",formattedDate:"December 24, 2021",tags:[{label:"Technology",permalink:"/blog/tags/technology"}],readingTime:4.615,truncated:!0,authors:[{name:"Zeping Bai",title:"Author",url:"https://github.com/bzp2010",image_url:"https://avatars.githubusercontent.com/u/8078418?v=4",imageURL:"https://avatars.githubusercontent.com/u/8078418?v=4"},{name:"Yilin Zeng",title:"Technical Writer",url:"https://github.com/yzeng25",image_url:"https://avatars.githubusercontent.com/u/36651058?v=4",imageURL:"https://avatars.githubusercontent.com/u/36651058?v=4"}],prevItem:{title:"Coming soon! Apache APISIX Integrate with Apache OpenWhisk",permalink:"/blog/2021/12/24/apisix-integrate-openwhisk-plugin"},nextItem:{title:"Apache APISIX Integrates with Google Cloud Logging to Improve Log Processing",permalink:"/blog/2021/12/22/google-logging"}},u={authorsImageUrls:[void 0,void 0]},c=[{value:"Plugin Introduction",id:"plugin-introduction",children:[]},{value:"How to use",id:"how-to-use",children:[{value:"Build test environment",id:"build-test-environment",children:[]},{value:"Create a route and enable the plugin",id:"create-a-route-and-enable-the-plugin",children:[]},{value:"Test Requests",id:"test-requests",children:[]},{value:"Disable the plugin",id:"disable-the-plugin",children:[]}]},{value:"Summary",id:"summary",children:[]}],p={toc:c};function h(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This article introduces the ",(0,o.kt)("inlineCode",{parentName:"p"},"opa")," plug-in as an example of HTTP API and details how to integrate Apache APISIX with OPA to decouple the authentication authorization of back-end services.")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://static.apiseven.com/202108/1640333490845-38542a3e-5d3a-4960-b11f-69ce3a61f7fc.png",alt:"APISIX-OPA cover"})),(0,o.kt)("p",null,"Open Policy Agent (OPA) is an open source lightweight general-purpose policy engine that can replace the built-in policy function module in software and help users decouple services from the policy engine. Thanks to ",(0,o.kt)("a",{parentName:"p",href:"https://www.openpolicyagent.org/docs/latest/ecosystem/"},"OPA's well-established ecosystem"),", users can easily integrate OPA with other services, such as program libraries, HTTP APIs, etc."),(0,o.kt)("p",null,"As shown in the figure below, OPA first describes the policy through the policy language Rego; then stores the policy data through JSON, after which the user can send a query request. After receiving the query request, OPA will combine the policy, data and user input to generate a policy decision and send the decision to the service."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://static.apiseven.com/202108/1640332208554-40f574e3-0582-48f3-8e07-eb49fbd37ac7.png",alt:"OPA Workflow"})),(0,o.kt)("h2",{id:"plugin-introduction"},"Plugin Introduction"),(0,o.kt)("p",null,"Apache APISIX provides an ",(0,o.kt)("inlineCode",{parentName:"p"},"opa")," plug-in that allows users to conveniently introduce the policy capabilities provided by OPA to Apache APISIX to enable flexible authentication and access control features."),(0,o.kt)("p",null,"After configuring the ",(0,o.kt)("inlineCode",{parentName:"p"},"opa")," plug-in on a route, Apache APISIX assembles request information, connection information, etc. into JSON data and sends it to the policy decision API address when processing response requests. As long as the policy deployed in OPA conforms to the data specification set by Apache APISIX, functions such as pass request, reject request, custom status code, custom response header, custom response header, etc. can be implemented."),(0,o.kt)("p",null,"This article takes HTTP API as an example to introduce the ",(0,o.kt)("inlineCode",{parentName:"p"},"opa")," plug-in and details how to integrate Apache APISIX with OPA to decouple authentication authorization for back-end services."),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("h3",{id:"build-test-environment"},"Build test environment"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Use Docker to build OPA services."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Running OPA with Docker\ndocker run -d --name opa -p 8181:8181 openpolicyagent/opa:0.35.0 run -s\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create an ",(0,o.kt)("inlineCode",{parentName:"p"},"example")," policy."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'# Create policy\ncurl -XPUT \'localhost:8181/v1/policies/example\' \\\n--header \'Content-Type: text/plain\' \\\n--data-raw \'package example\n\nimport input.request\nimport data.users\n\ndefault allow = false\n\nallow {\n    # has the name test-header with the value only-for-test request header\n    request.headers["test-header"] == "only-for-test"\n    # The request method is GET\n    request.method == "GET"\n    # The request path starts with /get\n    startswith(request.path, "/get")\n    # GET parameter test exists and is not equal to abcd\n    request.query["test"] != "abcd"\n    # GET parameter user exists\n    request.query["user"]\n}\n\nreason = users[request.query["user"]].reason {\n    not allow\n    request.query["user"]\n}\n\nheaders = users[request.query["user"]].headers {\n    not allow\n    request.query["user"]\n}\n\nstatus_code = users[request.query["user"]].status_code {\n    not allow\n    request.query["user"]\n}\'\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create ",(0,o.kt)("inlineCode",{parentName:"p"},"users")," data."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'# Create test user data\ncurl -XPUT \'localhost:8181/v1/data/users\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "alice": {\n        "headers": {\n            "Location": "http://example.com/auth"\n        },\n        "status_code": 302\n    },\n    "bob": {\n        "headers": {\n            "test": "abcd",\n            "abce": "test"\n        }\n    },\n    "carla": {\n        "reason": "Give you a string reason"\n    },\n    "dylon": {\n        "headers": {\n            "Content-Type": "application/json"\n        },\n        "reason": {\n            "code": 40001,\n            "desc": "Give you a object reason"\n        }\n    }\n}\'\n')))),(0,o.kt)("h3",{id:"create-a-route-and-enable-the-plugin"},"Create a route and enable the plugin"),(0,o.kt)("p",null,"Run the following command to create the route and enable the ",(0,o.kt)("inlineCode",{parentName:"p"},"opa")," plugin."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl -XPUT \'http://127.0.0.1:9080/apisix/admin/routes/r1\' \\\n--header \'X-API-KEY: <api-key>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "uri": "/*",\n    "methods": [\n        "GET",\n        "POST",\n        "PUT",\n        "DELETE"\n    ],\n    "plugins": {\n        "opa": {\n            "host": "http://127.0.0.1:8181",\n            "policy": "example"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "httpbin.org:80": 1\n        },\n        "type": "roundrobin"\n    }\n}\'\n')),(0,o.kt)("h3",{id:"test-requests"},"Test Requests"),(0,o.kt)("p",null,"Next, run the following command to send a request to the ",(0,o.kt)("inlineCode",{parentName:"p"},"opa")," plugin to test the plugin's running status."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'# Allow requests\ncurl -XGET \'127.0.0.1:9080/get?test=none&user=dylon\' \\\n    --header \'test-header: only-for-test\'\n{\n    "args": {\n        "test": "abcd1",\n        "user": "dylon"\n    },\n    "headers": {\n        "Test-Header": "only-for-test",\n        "with": "more"\n    },\n    "origin": "127.0.0.1",\n    "url": "http://127.0.0.1/get?test=abcd1&user=dylon"\n}\n\n# Reject the request and rewrite the status code and response headers\ncurl -XGET \'127.0.0.1:9080/get?test=abcd&user=alice\' \\\n    --header \'test-header: only-for-test\'\n\nHTTP/1.1 302 Moved Temporarily\nDate: Mon, 20 Dec 2021 09:37:35 GMT\nContent-Type: text/html\nContent-Length: 142\nConnection: keep-alive\nLocation: http://example.com/auth\nServer: APISIX/2.11.0\n\n# Rejects the request and returns a custom response header\ncurl -XGET \'127.0.0.1:9080/get?test=abcd&user=bob\' \\\n    --header \'test-header: only-for-test\'\n\nHTTP/1.1 403 Forbidden\nDate: Mon, 20 Dec 2021 09:38:27 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 150\nConnection: keep-alive\nabce: test\ntest: abcd\nServer: APISIX/2.11.0\n\n# Rejects the request and returns a custom response (string)\ncurl -XGET \'127.0.0.1:9080/get?test=abcd&user=carla\' \\\n    --header \'test-header: only-for-test\'\n\nHTTP/1.1 403 Forbidden\nDate: Mon, 20 Dec 2021 09:38:58 GMT\nContent-Type: text/plain; charset=utf-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nServer: APISIX/2.11.0\n\nGive you a string reason\n\n# Rejects the request and returns a custom response (JSON)\ncurl -XGET \'127.0.0.1:9080/get?test=abcd&user=dylon\' \\\n    --header \'test-header: only-for-test\'\n\nHTTP/1.1 403 Forbidden\nDate: Mon, 20 Dec 2021 09:42:12 GMT\nContent-Type: application/json\nTransfer-Encoding: chunked\nConnection: keep-alive\nServer: APISIX/2.11.0\n\n{"code":40001,"desc":"Give you a object reason"}\n')),(0,o.kt)("h3",{id:"disable-the-plugin"},"Disable the plugin"),(0,o.kt)("p",null,"Thanks to the dynamic nature of Apache APISIX, the OPA plug-in on a route can be turned off by simply removing the ",(0,o.kt)("inlineCode",{parentName:"p"},"opa")," plug-in related configuration from the route configuration and saving it."),(0,o.kt)("h2",{id:"summary"},"Summary"),(0,o.kt)("p",null,"This article describes the detailed steps for interfacing Apache APISIX and Open Policy Agent. We hope this article will give you a clearer understanding of using Open Policy Agent in Apache APISIX and facilitate the subsequent hands-on operation."),(0,o.kt)("p",null,"Apache APISIX is not only committed to maintaining its own high performance, but also has always attached great importance to the construction of open source ecology. At present, Apache APISIX has 10+ authentication authorization-related plug-ins that support interfacing with mainstream authentication authorization services in the industry."),(0,o.kt)("p",null,"If you have the need to interface with other authentication authorities, visit Apache APISIX's ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/issues"},"GitHub")," and leave your suggestions via issue; or subscribe to Apache APISIX's ",(0,o.kt)("a",{parentName:"p",href:"https://apisix.apache.org/zh/docs/general/subscribe-guide"},"mailing list")," to express your ideas via email."))}h.isMDXComponent=!0}}]);